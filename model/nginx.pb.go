// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/nginx.proto

package model

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HalloReq struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName             string   `protobuf:"bytes,2,opt,name=lastName,proto3" json:"lastName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HalloReq) Reset()         { *m = HalloReq{} }
func (m *HalloReq) String() string { return proto.CompactTextString(m) }
func (*HalloReq) ProtoMessage()    {}
func (*HalloReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_206bd668339b7141, []int{0}
}

func (m *HalloReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HalloReq.Unmarshal(m, b)
}
func (m *HalloReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HalloReq.Marshal(b, m, deterministic)
}
func (m *HalloReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HalloReq.Merge(m, src)
}
func (m *HalloReq) XXX_Size() int {
	return xxx_messageInfo_HalloReq.Size(m)
}
func (m *HalloReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HalloReq.DiscardUnknown(m)
}

var xxx_messageInfo_HalloReq proto.InternalMessageInfo

func (m *HalloReq) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *HalloReq) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type HalloResp struct {
	Fullname             string   `protobuf:"bytes,1,opt,name=fullname,proto3" json:"fullname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HalloResp) Reset()         { *m = HalloResp{} }
func (m *HalloResp) String() string { return proto.CompactTextString(m) }
func (*HalloResp) ProtoMessage()    {}
func (*HalloResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_206bd668339b7141, []int{1}
}

func (m *HalloResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HalloResp.Unmarshal(m, b)
}
func (m *HalloResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HalloResp.Marshal(b, m, deterministic)
}
func (m *HalloResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HalloResp.Merge(m, src)
}
func (m *HalloResp) XXX_Size() int {
	return xxx_messageInfo_HalloResp.Size(m)
}
func (m *HalloResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HalloResp.DiscardUnknown(m)
}

var xxx_messageInfo_HalloResp proto.InternalMessageInfo

func (m *HalloResp) GetFullname() string {
	if m != nil {
		return m.Fullname
	}
	return ""
}

type InfoReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoReq) Reset()         { *m = InfoReq{} }
func (m *InfoReq) String() string { return proto.CompactTextString(m) }
func (*InfoReq) ProtoMessage()    {}
func (*InfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_206bd668339b7141, []int{2}
}

func (m *InfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoReq.Unmarshal(m, b)
}
func (m *InfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoReq.Marshal(b, m, deterministic)
}
func (m *InfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoReq.Merge(m, src)
}
func (m *InfoReq) XXX_Size() int {
	return xxx_messageInfo_InfoReq.Size(m)
}
func (m *InfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_InfoReq proto.InternalMessageInfo

func (m *InfoReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type InfoResp struct {
	Details              string   `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoResp) Reset()         { *m = InfoResp{} }
func (m *InfoResp) String() string { return proto.CompactTextString(m) }
func (*InfoResp) ProtoMessage()    {}
func (*InfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_206bd668339b7141, []int{3}
}

func (m *InfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResp.Unmarshal(m, b)
}
func (m *InfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResp.Marshal(b, m, deterministic)
}
func (m *InfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResp.Merge(m, src)
}
func (m *InfoResp) XXX_Size() int {
	return xxx_messageInfo_InfoResp.Size(m)
}
func (m *InfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResp proto.InternalMessageInfo

func (m *InfoResp) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func init() {
	proto.RegisterType((*HalloReq)(nil), "model.halloReq")
	proto.RegisterType((*HalloResp)(nil), "model.halloResp")
	proto.RegisterType((*InfoReq)(nil), "model.infoReq")
	proto.RegisterType((*InfoResp)(nil), "model.infoResp")
}

func init() { proto.RegisterFile("model/nginx.proto", fileDescriptor_206bd668339b7141) }

var fileDescriptor_206bd668339b7141 = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x3f, 0x4b, 0x04, 0x31,
	0x10, 0xc5, 0x39, 0x51, 0x37, 0x3b, 0x82, 0xab, 0x53, 0x1d, 0x8b, 0x82, 0x04, 0x41, 0x1b, 0x23,
	0xe8, 0x37, 0x10, 0x0b, 0x6d, 0x2c, 0xce, 0xce, 0x2e, 0x7a, 0x13, 0x0d, 0xcc, 0x25, 0x31, 0xb3,
	0x8a, 0x7e, 0x7b, 0x31, 0x97, 0xfb, 0xb3, 0x5d, 0xde, 0x7b, 0x3f, 0x5e, 0x66, 0x06, 0x8e, 0x17,
	0x71, 0x4e, 0x7c, 0x1d, 0xde, 0x7d, 0xf8, 0x31, 0x29, 0xc7, 0x21, 0xe2, 0x5e, 0xb1, 0xf4, 0x3d,
	0xa8, 0x0f, 0xcb, 0x1c, 0x67, 0xf4, 0x89, 0x27, 0xd0, 0x3a, 0x9f, 0x65, 0x78, 0xb2, 0x0b, 0x9a,
	0x4e, 0xce, 0x26, 0x97, 0xed, 0x6c, 0x63, 0x60, 0x0f, 0x8a, 0x6d, 0x0d, 0x77, 0x4a, 0xb8, 0xd6,
	0xfa, 0x02, 0xda, 0xda, 0x22, 0xe9, 0x1f, 0x74, 0x5f, 0xcc, 0x61, 0xd3, 0xb2, 0xd6, 0xfa, 0x14,
	0x1a, 0x1f, 0x5c, 0xf9, 0x0d, 0x61, 0x77, 0x0b, 0x29, 0x6f, 0x7d, 0x0e, 0x6a, 0x19, 0x4b, 0xc2,
	0x29, 0x34, 0x73, 0x1a, 0xac, 0x67, 0xa9, 0xc8, 0x4a, 0xde, 0x24, 0xe8, 0x12, 0x65, 0x89, 0xc1,
	0xf2, 0x33, 0xe5, 0x6f, 0xff, 0x46, 0x78, 0x05, 0x4a, 0xec, 0xef, 0x03, 0x31, 0x47, 0xec, 0x4c,
	0x59, 0xcd, 0xac, 0xf6, 0xea, 0x8f, 0xc6, 0x86, 0x24, 0x34, 0x70, 0x50, 0xcb, 0x1e, 0x83, 0x8b,
	0x78, 0x58, 0x81, 0x3a, 0x5a, 0xdf, 0x8d, 0xb4, 0xa4, 0xbb, 0xe6, 0x65, 0x79, 0xae, 0xd7, 0xfd,
	0x72, 0xbc, 0xdb, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x41, 0x83, 0x50, 0xba, 0x51, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PersonalServiceClient is the client API for PersonalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PersonalServiceClient interface {
	SayHello(ctx context.Context, in *HalloReq, opts ...grpc.CallOption) (*HalloResp, error)
	DetailsInfo(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*InfoResp, error)
}

type personalServiceClient struct {
	cc *grpc.ClientConn
}

func NewPersonalServiceClient(cc *grpc.ClientConn) PersonalServiceClient {
	return &personalServiceClient{cc}
}

func (c *personalServiceClient) SayHello(ctx context.Context, in *HalloReq, opts ...grpc.CallOption) (*HalloResp, error) {
	out := new(HalloResp)
	err := c.cc.Invoke(ctx, "/model.personalService/sayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personalServiceClient) DetailsInfo(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*InfoResp, error) {
	out := new(InfoResp)
	err := c.cc.Invoke(ctx, "/model.personalService/detailsInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PersonalServiceServer is the server API for PersonalService service.
type PersonalServiceServer interface {
	SayHello(context.Context, *HalloReq) (*HalloResp, error)
	DetailsInfo(context.Context, *InfoReq) (*InfoResp, error)
}

func RegisterPersonalServiceServer(s *grpc.Server, srv PersonalServiceServer) {
	s.RegisterService(&_PersonalService_serviceDesc, srv)
}

func _PersonalService_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HalloReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServiceServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.personalService/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServiceServer).SayHello(ctx, req.(*HalloReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonalService_DetailsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServiceServer).DetailsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.personalService/DetailsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServiceServer).DetailsInfo(ctx, req.(*InfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PersonalService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.personalService",
	HandlerType: (*PersonalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "sayHello",
			Handler:    _PersonalService_SayHello_Handler,
		},
		{
			MethodName: "detailsInfo",
			Handler:    _PersonalService_DetailsInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "model/nginx.proto",
}
